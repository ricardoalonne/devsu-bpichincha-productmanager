"use strict";(self.webpackChunkdevsu_bpichincha_productmanager=self.webpackChunkdevsu_bpichincha_productmanager||[]).push([[592],{6409:(v,f,o)=>{o.d(f,{M:()=>h});var c=o(6306),u=o(7398);const p=`${o(553).N.bpProductosFinancierosApiUrl}/products`;var t=o(2096),i=o(8504);const e=a=>{if(a.status){if(a.status.toString().startsWith("20"))return(0,t.of)(a.error.text);console.error(`Error [SC-${a.status}]`,a.error)}else console.error("Error [SC-UNK]",a.error);return(0,i._)(()=>new Error("Ocurri\xf3 un error, vuelva a intentar."))};var s=o(5418),r=o(4946),y=o(9862);let h=(()=>{class a{constructor(n){this.httpClient=n}getProducts(){return this.httpClient.get(`${p}`).pipe((0,c.K)(e),(0,u.U)(n=>n.map(l=>(0,s.i3)(l))))}searchProducts(n){return this.httpClient.get(`${p}`).pipe((0,c.K)(e),(0,u.U)(l=>l.map(C=>(0,s.i3)(C)).filter(C=>(0,s.RR)(C,n))))}createdProduct(n){return this.httpClient.post(`${p}`,n.toSnakeCase()).pipe((0,c.K)(e),(0,u.U)(l=>(0,s.i3)(l)))}editProduct(n){return this.httpClient.put(`${p}`,n.toSnakeCase()).pipe((0,c.K)(e),(0,u.U)(l=>(0,s.i3)(l)))}deleteProduct(n){return this.httpClient.delete(`${p}?id=${n}`).pipe((0,c.K)(e))}verificationProduct(n){return this.httpClient.get(`${p}/verification?id=${n}`).pipe((0,c.K)(e))}static#t=this.\u0275fac=function(l){return new(l||a)(r.LFG(y.eN))};static#e=this.\u0275prov=r.Yz7({token:a,factory:a.\u0275fac,providedIn:"root"})}return a})()},5418:(v,f,o)=>{o.d(f,{O8:()=>c,RR:()=>p,i3:()=>u,t7:()=>d});const c=t=>{if("object"!=typeof t||null===t)return t;if(Array.isArray(t))return t.map(e=>c(e));const i={};for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)){const s=e.replace(/([A-Z])/g,"_$1").toLowerCase();let r=t[e];"object"==typeof r&&!(r instanceof Date)&&(r=c(r)),i[s]=r}return i},u=t=>{if("object"!=typeof t||null===t)return t;if(Array.isArray(t))return t.map(e=>u(e));const i={};for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)){const s=e.replace(/_([a-z])/g,(y,h)=>h.toUpperCase());let r=t[e];"object"==typeof r&&!(r instanceof Date)&&(r=u(r)),i[s]=r}return i},d=(t,i)=>{if(null!=t)for(const e in t)null!=t[e]&&(i[e]=t[e]);return i},p=(t,i)=>{for(const e in t)if(t[e].toString().trim()===i||t[e].toString().trim().includes(i))return!0;return!1}}}]);